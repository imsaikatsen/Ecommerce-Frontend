{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from \"axios\";\nconst store = createStore({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {},\n    error: ''\n  },\n  getters: {\n    isLoggedIn: state => !!state.token,\n    authStatus: state => state.status,\n    getUser: state => state.user,\n    getError: state => state.error\n  },\n  actions: {\n    async login({\n      commit\n    }, user) {\n      const rawResponse = fetch('http://localhost:8000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: user\n      });\n      const content = rawResponse.json();\n      console.log(content); // return new Promise((resolve, reject) => {\n      //   commit('auth_request')\n      //   axios({\n      //     url: 'login', data: user, method: 'POST'\n      //   })\n      //     .then(resp => {\n      //       console.log(resp)\n      //       const token = 'Bearer ' + resp.data.access_token\n      //       const user = resp.data.user\n      //       localStorage.setItem('token', token)\n      //       axios.defaults.headers.common['Authorization'] = token\n      //       commit('auth_success', token, user)\n      //       commit('set_user', user)\n      //       commit('handle_error', '')\n      //       resolve(resp)\n      //     })\n      //     .catch(err => {\n      //       localStorage.removeItem('token')\n      //       reject(err)\n      //     })\n      // })\n    },\n\n    getUser({\n      commit\n    }) {\n      return new Promise((resolve, reject) => {\n        axios({\n          url: 'user',\n          method: 'GET'\n        }).then(res => {\n          commit('set_user', res.data);\n          resolve(res);\n          console.log(reject);\n        });\n      });\n    }\n\n  },\n  mutations: {\n    auth_request(state) {\n      state.status = 'loading';\n    },\n\n    auth_success(state, token) {\n      state.status = 'success';\n      state.token = token;\n    },\n\n    set_user(state, user) {\n      state.user = user;\n    },\n\n    handle_error(state, error) {\n      state.error = error;\n    }\n\n  }\n});\nexport default store;","map":{"version":3,"sources":["D:/Web/vue/ecommerce_admin_ui/src/store/index.js"],"names":["createStore","axios","store","state","status","token","localStorage","getItem","user","error","getters","isLoggedIn","authStatus","getUser","getError","actions","login","commit","rawResponse","fetch","method","headers","body","content","json","console","log","Promise","resolve","reject","url","then","res","data","mutations","auth_request","auth_success","set_user","handle_error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AAExBG,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAFnC;AAGLC,IAAAA,IAAI,EAAE,EAHD;AAILC,IAAAA,KAAK,EAAE;AAJF,GAFiB;AAQxBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAER,KAAK,IAAI,CAAC,CAACA,KAAK,CAACE,KADtB;AAEPO,IAAAA,UAAU,EAAET,KAAK,IAAIA,KAAK,CAACC,MAFpB;AAGPS,IAAAA,OAAO,EAAEV,KAAK,IAAIA,KAAK,CAACK,IAHjB;AAIPM,IAAAA,QAAQ,EAAEX,KAAK,IAAIA,KAAK,CAACM;AAJlB,GARe;AAcxBM,EAAAA,OAAO,EAAE;AACP,UAAMC,KAAN,CAAY;AAAEC,MAAAA;AAAF,KAAZ,EAAwBT,IAAxB,EAA8B;AAC5B,YAAMU,WAAW,GAAGC,KAAK,CAAC,sCAAD,EAAyC;AAChEC,QAAAA,MAAM,EAAE,MADwD;AAEhEC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SAFuD;AAMhEC,QAAAA,IAAI,EAAEd;AAN0D,OAAzC,CAAzB;AAQA,YAAMe,OAAO,GAAGL,WAAW,CAACM,IAAZ,EAAhB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAX4B,CAc5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KApCM;;AAqCPV,IAAAA,OAAO,CAAC;AAAEI,MAAAA;AAAF,KAAD,EAAa;AAClB,aAAO,IAAIU,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC5B,QAAAA,KAAK,CAAC;AAAE6B,UAAAA,GAAG,EAAE,MAAP;AAAeV,UAAAA,MAAM,EAAE;AAAvB,SAAD,CAAL,CAAsCW,IAAtC,CAA2CC,GAAG,IAAI;AAChDf,UAAAA,MAAM,CAAC,UAAD,EAAae,GAAG,CAACC,IAAjB,CAAN;AACAL,UAAAA,OAAO,CAACI,GAAD,CAAP;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACD,SAJD;AAKD,OANM,CAAP;AAOD;;AA7CM,GAde;AA6DxBK,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,CAAChC,KAAD,EAAQ;AAClBA,MAAAA,KAAK,CAACC,MAAN,GAAe,SAAf;AACD,KAHQ;;AAITgC,IAAAA,YAAY,CAACjC,KAAD,EAAQE,KAAR,EAAe;AACzBF,MAAAA,KAAK,CAACC,MAAN,GAAe,SAAf;AACAD,MAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACD,KAPQ;;AAQTgC,IAAAA,QAAQ,CAAClC,KAAD,EAAQK,IAAR,EAAc;AACpBL,MAAAA,KAAK,CAACK,IAAN,GAAaA,IAAb;AACD,KAVQ;;AAWT8B,IAAAA,YAAY,CAACnC,KAAD,EAAQM,KAAR,EAAe;AACzBN,MAAAA,KAAK,CAACM,KAAN,GAAcA,KAAd;AACD;;AAbQ;AA7Da,CAAD,CAAzB;AA8EA,eAAeP,KAAf","sourcesContent":["import { createStore } from 'vuex'\r\nimport axios from \"axios\";\r\n\r\n\r\nconst store = createStore({\r\n\r\n  state: {\r\n    status: '',\r\n    token: localStorage.getItem('token') || '',\r\n    user: {},\r\n    error: '',\r\n  },\r\n  getters: {\r\n    isLoggedIn: state => !!state.token,\r\n    authStatus: state => state.status,\r\n    getUser: state => state.user,\r\n    getError: state => state.error\r\n  },\r\n  actions: {\r\n    async login({ commit }, user) {\r\n      const rawResponse = fetch('http://localhost:8000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: user\r\n      });\r\n      const content = rawResponse.json();\r\n\r\n      console.log(content);\r\n\r\n\r\n      // return new Promise((resolve, reject) => {\r\n      //   commit('auth_request')\r\n      //   axios({\r\n      //     url: 'login', data: user, method: 'POST'\r\n      //   })\r\n      //     .then(resp => {\r\n      //       console.log(resp)\r\n      //       const token = 'Bearer ' + resp.data.access_token\r\n      //       const user = resp.data.user\r\n      //       localStorage.setItem('token', token)\r\n      //       axios.defaults.headers.common['Authorization'] = token\r\n      //       commit('auth_success', token, user)\r\n      //       commit('set_user', user)\r\n      //       commit('handle_error', '')\r\n      //       resolve(resp)\r\n      //     })\r\n      //     .catch(err => {\r\n      //       localStorage.removeItem('token')\r\n      //       reject(err)\r\n      //     })\r\n      // })\r\n    },\r\n    getUser({ commit }) {\r\n      return new Promise((resolve, reject) => {\r\n        axios({ url: 'user', method: 'GET' }).then(res => {\r\n          commit('set_user', res.data)\r\n          resolve(res)\r\n          console.log(reject)\r\n        })\r\n      });\r\n    }\r\n  },\r\n  mutations: {\r\n    auth_request(state) {\r\n      state.status = 'loading'\r\n    },\r\n    auth_success(state, token) {\r\n      state.status = 'success'\r\n      state.token = token\r\n    },\r\n    set_user(state, user) {\r\n      state.user = user\r\n    },\r\n    handle_error(state, error) {\r\n      state.error = error\r\n    },\r\n  }\r\n});\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}