{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport { createStore } from \"vue\";\nVue.use(Vuex);\nvue.use(vue);\nexport default createStore({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {},\n    error: ''\n  },\n  getters: {\n    isLoggedIn: state => !!state.token,\n    authStatus: state => state.status,\n    getUser: state => state.user,\n    getError: state => state.error\n  },\n  actions: {\n    login({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        commit('auth_request');\n        axios({\n          url: 'login',\n          data: user,\n          method: 'POST'\n        }).then(resp => {\n          const token = 'Bearer ' + resp.data.access_token;\n          const user = resp.data.user;\n          localStorage.setItem('token', token);\n          axios.defaults.headers.common['Authorization'] = token;\n          commit('auth_success', token, user);\n          commit('set_user', user);\n          commit('handle_error', '');\n          resolve(resp);\n        }).catch(err => {\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n\n    // Register({commit}, user){\n    //   return new Promise((resolve, reject) => {\n    //     commit('auth_request')\n    //     axios({url: 'register', data: user, method: 'POST' })\n    //     .then(resp => {\n    //       const token = 'Bearer '+resp.data.access_token\n    //       const user = resp.data.user\n    //       localStorage.setItem('token', token)\n    //       axios.defaults.headers.common['Authorization'] = token\n    //       commit('auth_success', token, user)\n    //       commit('handle_error', '')\n    //       resolve(resp)\n    //     })\n    //     .catch(error => {\n    //       localStorage.removeItem('token')\n    //       reject(error)\n    //     })\n    //   })\n    // },\n    // logout({commit}){\n    //   return new Promise((resolve, reject) => {\n    //     commit('logout')\n    //     localStorage.removeItem('token')\n    //     delete axios.defaults.headers.common['Authorization']\n    //     resolve()\n    //   })\n    // },\n    getUser({\n      commit\n    }) {\n      return new Promise((resolve, reject) => {\n        axios({\n          url: 'user',\n          method: 'GET'\n        }).then(res => {\n          commit('set_user', res.data);\n          resolve(res);\n          console.log(reject);\n        });\n      });\n    }\n\n  },\n  mutations: {\n    auth_request(state) {\n      state.status = 'loading';\n    },\n\n    auth_success(state, token) {\n      state.status = 'success';\n      state.token = token;\n    },\n\n    set_user(state, user) {\n      state.user = user;\n    },\n\n    handle_error(state, error) {\n      state.error = error;\n    } // logout(state){\n    //   state.status = ''\n    //   state.token = ''\n    // },\n\n\n  }\n});","map":{"version":3,"sources":["D:/Web/vue/ecommerce/src/store/index.js"],"names":["Vue","Vuex","axios","createStore","use","vue","state","status","token","localStorage","getItem","user","error","getters","isLoggedIn","authStatus","getUser","getError","actions","login","commit","Promise","resolve","reject","url","data","method","then","resp","access_token","setItem","defaults","headers","common","catch","err","removeItem","res","console","log","mutations","auth_request","auth_success","set_user","handle_error"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,KAA5B;AAEAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AACAI,GAAG,CAACD,GAAJ,CAAQC,GAAR;AAEA,eAAeF,WAAW,CAAC;AACzBG,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAFnC;AAGLC,IAAAA,IAAI,EAAG,EAHF;AAILC,IAAAA,KAAK,EAAG;AAJH,GADkB;AAOzBC,EAAAA,OAAO,EAAG;AACRC,IAAAA,UAAU,EAAER,KAAK,IAAI,CAAC,CAACA,KAAK,CAACE,KADrB;AAERO,IAAAA,UAAU,EAAET,KAAK,IAAIA,KAAK,CAACC,MAFnB;AAGRS,IAAAA,OAAO,EAAEV,KAAK,IAAGA,KAAK,CAACK,IAHf;AAIRM,IAAAA,QAAQ,EAAEX,KAAK,IAAGA,KAAK,CAACM;AAJhB,GAPe;AAazBM,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,CAAC;AAACC,MAAAA;AAAD,KAAD,EAAWT,IAAX,EAAgB;AACjB,aAAO,IAAIU,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCH,QAAAA,MAAM,CAAC,cAAD,CAAN;AACAlB,QAAAA,KAAK,CAAC;AAACsB,UAAAA,GAAG,EAAE,OAAN;AAAeC,UAAAA,IAAI,EAAEd,IAArB;AAA2Be,UAAAA,MAAM,EAAE;AAAnC,SAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAI;AACZ,gBAAMpB,KAAK,GAAG,YAAUoB,IAAI,CAACH,IAAL,CAAUI,YAAlC;AACA,gBAAMlB,IAAI,GAAGiB,IAAI,CAACH,IAAL,CAAUd,IAAvB;AACAF,UAAAA,YAAY,CAACqB,OAAb,CAAqB,OAArB,EAA8BtB,KAA9B;AACAN,UAAAA,KAAK,CAAC6B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDzB,KAAjD;AACAY,UAAAA,MAAM,CAAC,cAAD,EAAiBZ,KAAjB,EAAwBG,IAAxB,CAAN;AACAS,UAAAA,MAAM,CAAC,UAAD,EAAYT,IAAZ,CAAN;AACAS,UAAAA,MAAM,CAAC,cAAD,EAAiB,EAAjB,CAAN;AACAE,UAAAA,OAAO,CAACM,IAAD,CAAP;AACD,SAVD,EAWCM,KAXD,CAWOC,GAAG,IAAI;AACZ1B,UAAAA,YAAY,CAAC2B,UAAb,CAAwB,OAAxB;AACAb,UAAAA,MAAM,CAACY,GAAD,CAAN;AACD,SAdD;AAeD,OAjBM,CAAP;AAkBH,KApBM;;AAqBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAnB,IAAAA,OAAO,CAAC;AAACI,MAAAA;AAAD,KAAD,EAAU;AACf,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCrB,QAAAA,KAAK,CAAC;AAACsB,UAAAA,GAAG,EAAC,MAAL;AAAYE,UAAAA,MAAM,EAAC;AAAnB,SAAD,CAAL,CAAiCC,IAAjC,CAAsCU,GAAG,IAAG;AAC1CjB,UAAAA,MAAM,CAAC,UAAD,EAAYiB,GAAG,CAACZ,IAAhB,CAAN;AACAH,UAAAA,OAAO,CAACe,GAAD,CAAP;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACD,SAJD;AAKD,OANM,CAAP;AAOD;;AAzDM,GAbgB;AAwEzBiB,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,CAACnC,KAAD,EAAO;AACjBA,MAAAA,KAAK,CAACC,MAAN,GAAe,SAAf;AACD,KAHQ;;AAITmC,IAAAA,YAAY,CAACpC,KAAD,EAAQE,KAAR,EAAc;AACxBF,MAAAA,KAAK,CAACC,MAAN,GAAe,SAAf;AACAD,MAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACD,KAPQ;;AAQTmC,IAAAA,QAAQ,CAACrC,KAAD,EAAOK,IAAP,EAAY;AAClBL,MAAAA,KAAK,CAACK,IAAN,GAAaA,IAAb;AACD,KAVQ;;AAWTiC,IAAAA,YAAY,CAACtC,KAAD,EAAOM,KAAP,EAAa;AACvBN,MAAAA,KAAK,CAACM,KAAN,GAAcA,KAAd;AACD,KAbQ,CAcT;AACA;AACA;AACA;;;AAjBS;AAxEc,CAAD,CAA1B","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from 'axios'\r\nimport { createStore } from \"vue\";\r\n\r\nVue.use(Vuex)\r\nvue.use(vue)\r\n\r\nexport default createStore({\r\n  state: {\r\n    status: '',\r\n    token: localStorage.getItem('token') || '',\r\n    user : {},\r\n    error : '',\r\n  },\r\n  getters : {\r\n    isLoggedIn: state => !!state.token,\r\n    authStatus: state => state.status,\r\n    getUser: state=> state.user,\r\n    getError: state=> state.error\r\n  },\r\n  actions: {\r\n    login({commit}, user){\r\n        return new Promise((resolve, reject) => {\r\n          commit('auth_request')\r\n          axios({url: 'login', data: user, method: 'POST' })\r\n          .then(resp => {\r\n            const token = 'Bearer '+resp.data.access_token\r\n            const user = resp.data.user\r\n            localStorage.setItem('token', token)\r\n            axios.defaults.headers.common['Authorization'] = token\r\n            commit('auth_success', token, user)\r\n            commit('set_user',user)\r\n            commit('handle_error', '')\r\n            resolve(resp)\r\n          })\r\n          .catch(err => {\r\n            localStorage.removeItem('token')\r\n            reject(err)\r\n          })\r\n        })\r\n    },\r\n    // Register({commit}, user){\r\n    //   return new Promise((resolve, reject) => {\r\n    //     commit('auth_request')\r\n    //     axios({url: 'register', data: user, method: 'POST' })\r\n    //     .then(resp => {\r\n    //       const token = 'Bearer '+resp.data.access_token\r\n    //       const user = resp.data.user\r\n    //       localStorage.setItem('token', token)\r\n    //       axios.defaults.headers.common['Authorization'] = token\r\n    //       commit('auth_success', token, user)\r\n    //       commit('handle_error', '')\r\n    //       resolve(resp)\r\n    //     })\r\n    //     .catch(error => {\r\n    //       localStorage.removeItem('token')\r\n    //       reject(error)\r\n    //     })\r\n    //   })\r\n    // },\r\n    // logout({commit}){\r\n    //   return new Promise((resolve, reject) => {\r\n    //     commit('logout')\r\n    //     localStorage.removeItem('token')\r\n    //     delete axios.defaults.headers.common['Authorization']\r\n    //     resolve()\r\n    //   })\r\n    // },\r\n\r\n    getUser({commit}){\r\n      return new Promise((resolve, reject) => {\r\n        axios({url:'user',method:'GET'}).then(res =>{\r\n          commit('set_user',res.data)\r\n          resolve(res)\r\n          console.log(reject)\r\n        })\r\n      }); \r\n    }\r\n  },\r\n  mutations: {\r\n    auth_request(state){\r\n      state.status = 'loading'\r\n    },\r\n    auth_success(state, token){\r\n      state.status = 'success'\r\n      state.token = token\r\n    },\r\n    set_user(state,user){\r\n      state.user = user\r\n    },\r\n    handle_error(state,error){\r\n      state.error = error\r\n    },\r\n    // logout(state){\r\n    //   state.status = ''\r\n    //   state.token = ''\r\n    // },\r\n  },\r\n  \r\n})"]},"metadata":{},"sourceType":"module"}