{"ast":null,"code":"import axios from \"axios\";\nconst state = {\n  status: '',\n  token: localStorage.getItem('token') || '',\n  user: {},\n  error: ''\n};\nconst getters = {\n  isLoggedIn: state => !!state.token,\n  authStatus: state => state.status,\n  getUser: state => state.user,\n  getError: state => state.error\n};\nconst actions = {\n  login({\n    commit\n  }, user) {\n    return new Promise((resolve, reject) => {\n      commit('auth_request');\n      axios({\n        url: '',\n        data: user,\n        method: 'POST'\n      }).then(resp => {\n        const token = 'Bearer ' + resp.data.access_token;\n        const user = resp.data.user;\n        localStorage.setItem('token', token);\n        axios.defaults.headers.common['Authorization'] = token;\n        commit('auth_success', token, user);\n        commit('set_user', user);\n        commit('handle_error', '');\n        resolve(resp);\n      }).catch(err => {\n        localStorage.removeItem('token');\n        reject(err);\n      });\n    });\n  },\n\n  getUser({\n    commit\n  }) {\n    return new Promise((resolve, reject) => {\n      axios({\n        url: 'user',\n        method: 'GET'\n      }).then(res => {\n        commit('set_user', res.data);\n        resolve(res);\n        console.log(reject);\n      });\n    });\n  }\n\n};\nconst mutations = {\n  auth_request(state) {\n    state.status = 'loading';\n  },\n\n  auth_success(state, token) {\n    state.status = 'success';\n    state.token = token;\n  },\n\n  set_user(state, user) {\n    state.user = user;\n  },\n\n  handle_error(state, error) {\n    state.error = error;\n  }\n\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"sources":["D:/Web/vue/ecommerce/src/store/modules/login.js"],"names":["axios","state","status","token","localStorage","getItem","user","error","getters","isLoggedIn","authStatus","getUser","getError","actions","login","commit","Promise","resolve","reject","url","data","method","then","resp","access_token","setItem","defaults","headers","common","catch","err","removeItem","res","console","log","mutations","auth_request","auth_success","set_user","handle_error"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst state = {\r\n    status: '',\r\n    token: localStorage.getItem('token') || '',\r\n    user : {},\r\n    error : '',\r\n};\r\n\r\nconst getters = {\r\n    isLoggedIn: state => !!state.token,\r\n    authStatus: state => state.status,\r\n    getUser: state=> state.user,\r\n    getError: state=> state.error\r\n};\r\n\r\nconst actions = {\r\n    login({commit}, user){\r\n        return new Promise((resolve, reject) => {\r\n          commit('auth_request')\r\n          axios({url: '', data: user, method: 'POST' })\r\n          .then(resp => {\r\n            const token = 'Bearer '+resp.data.access_token\r\n            const user = resp.data.user\r\n            localStorage.setItem('token', token)\r\n            axios.defaults.headers.common['Authorization'] = token\r\n            commit('auth_success', token, user)\r\n            commit('set_user',user)\r\n            commit('handle_error', '')\r\n            resolve(resp)\r\n          })\r\n          .catch(err => {\r\n            localStorage.removeItem('token')\r\n            reject(err)\r\n          })\r\n        })\r\n    },\r\n    getUser({commit}){\r\n        return new Promise((resolve, reject) => {\r\n          axios({url:'user',method:'GET'}).then(res =>{\r\n            commit('set_user',res.data)\r\n            resolve(res)\r\n            console.log(reject)\r\n          })\r\n        }); \r\n      }\r\n};\r\n\r\nconst mutations = {\r\n    auth_request(state){\r\n        state.status = 'loading'\r\n      },\r\n      auth_success(state, token){\r\n        state.status = 'success'\r\n        state.token = token\r\n      },\r\n      set_user(state,user){\r\n        state.user = user\r\n      },\r\n      handle_error(state,error){\r\n        state.error = error\r\n      },\r\n};\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};"]},"metadata":{},"sourceType":"module"}