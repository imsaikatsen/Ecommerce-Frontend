{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from \"axios\";\nconst store = createStore({\n  state: {},\n  getters: {\n    isLoggedIn: state => !!state.token,\n    authStatus: state => state.status,\n    getUser: state => state.user,\n    getError: state => state.error\n  },\n  actions: {\n    login({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        commit('auth_request');\n        axios({\n          url: 'login',\n          data: user,\n          method: 'POST'\n        }).then(resp => {\n          const token = 'Bearer ' + resp.data.access_token;\n          const user = resp.data.user;\n          localStorage.setItem('token', token);\n          axios.defaults.headers.common['Authorization'] = token;\n          commit('auth_success', token, user);\n          commit('set_user', user);\n          commit('handle_error', '');\n          resolve(resp);\n        }).catch(err => {\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n\n    getUser({\n      commit\n    }) {\n      return new Promise((resolve, reject) => {\n        axios({\n          url: 'user',\n          method: 'GET'\n        }).then(res => {\n          commit('set_user', res.data);\n          resolve(res);\n          console.log(reject);\n        });\n      });\n    }\n\n  },\n  mutations: {\n    auth_request(state) {\n      state.status = 'loading';\n    },\n\n    auth_success(state, token) {\n      state.status = 'success';\n      state.token = token;\n    },\n\n    set_user(state, user) {\n      state.user = user;\n    },\n\n    handle_error(state, error) {\n      state.error = error;\n    }\n\n  }\n});\nexport default store;","map":{"version":3,"sources":["D:/Web/vue/ecommerce_admin_ui/src/store/index.js"],"names":["createStore","axios","store","state","getters","isLoggedIn","token","authStatus","status","getUser","user","getError","error","actions","login","commit","Promise","resolve","reject","url","data","method","then","resp","access_token","localStorage","setItem","defaults","headers","common","catch","err","removeItem","res","console","log","mutations","auth_request","auth_success","set_user","handle_error"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex'\r\nimport axios from \"axios\";\r\n\r\nconst store = createStore({\r\n\r\n  state: {\r\n    \r\n  },\r\n  getters: {\r\n    isLoggedIn: state => !!state.token,\r\n    authStatus: state => state.status,\r\n    getUser: state => state.user,\r\n    getError: state => state.error\r\n  },\r\n  actions: {\r\n    login({ commit }, user) {\r\n      return new Promise((resolve, reject) => {\r\n        commit('auth_request')\r\n        axios({ url: 'login', data: user, method: 'POST' })\r\n          .then(resp => {\r\n            const token = 'Bearer ' + resp.data.access_token\r\n            const user = resp.data.user\r\n            localStorage.setItem('token', token)\r\n            axios.defaults.headers.common['Authorization'] = token\r\n            commit('auth_success', token, user)\r\n            commit('set_user', user)\r\n            commit('handle_error', '')\r\n            resolve(resp)\r\n          })\r\n          .catch(err => {\r\n            localStorage.removeItem('token')\r\n            reject(err)\r\n          })\r\n      })\r\n    },\r\n    getUser({ commit }) {\r\n      return new Promise((resolve, reject) => {\r\n        axios({ url: 'user', method: 'GET' }).then(res => {\r\n          commit('set_user', res.data)\r\n          resolve(res)\r\n          console.log(reject)\r\n        })\r\n      });\r\n    }\r\n  },\r\n  mutations: {\r\n    auth_request(state) {\r\n      state.status = 'loading'\r\n    },\r\n    auth_success(state, token) {\r\n      state.status = 'success'\r\n      state.token = token\r\n    },\r\n    set_user(state, user) {\r\n      state.user = user\r\n    },\r\n    handle_error(state, error) {\r\n      state.error = error\r\n    },\r\n  }\r\n});\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}